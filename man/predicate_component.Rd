% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core-components.R
\name{is_sym}
\alias{is_sym}
\alias{is_infix}
\alias{is_wrap}
\alias{is_call_for}
\alias{is_call_if}
\alias{is_call_while}
\alias{is_call_function}
\alias{is_call_break}
\alias{is_call_list}
\alias{is_call_df}
\alias{is_call_df_summarise}
\alias{is_call_df_mutate}
\alias{is_call_new}
\alias{is_call_let}
\alias{is_call_dataURI}
\alias{is_call_ifelse}
\alias{is_call_lambda}
\alias{is_call_pipe}
\alias{is_call_add}
\alias{is_call_subtract}
\alias{is_call_extract}
\alias{is_call_extractAssign}
\alias{is_call_extract2}
\alias{is_call_extract2Assign}
\title{Predicate for symbols, i.e. symbols or syntactic literals}
\usage{
is_sym(ast)

is_infix(ast)

is_wrap(ast)

is_call_for(ast)

is_call_if(ast)

is_call_while(ast)

is_call_function(ast)

is_call_break(ast)

is_call_list(ast)

is_call_df(ast)

is_call_df_summarise(ast)

is_call_df_mutate(ast)

is_call_new(ast)

is_call_let(ast)

is_call_dataURI(ast)

is_call_ifelse(ast)

is_call_lambda(ast)

is_call_pipe(ast)

is_call_add(ast)

is_call_subtract(ast)

is_call_extract(ast)

is_call_extractAssign(ast)

is_call_extract2(ast)

is_call_extract2Assign(ast)
}
\arguments{
\item{ast}{A language object.}
}
\description{
Predicate for symbols, i.e. symbols or syntactic literals

Predicate for infix operators

Predicate for brackets

Predicate for the 'for' keyword

Predicate for the 'if' keyword

Predicate for the 'while' keyword

Predicate for the 'function' keyword

Predicate for the 'break' keyword

Predicate for the "list" operators

Predicate for the "data.frame" operators

Predicate for the "summarise" operators

Predicate for the "mutate" operators

Predicate for the "new" operator

Predicate for the "let" operator

Predicate for the "dataURI" operator

Predicate for the "ifelse" operator

Predicate for the "lambda" operator

Predicate for the "pipe" operator

Predicate for the "add" operator

Predicate for the "subtract" operator

Predicate for the "extract" operator

Predicate for the "extractAssign" operator

Predicate for the "extract2" operator

Predicate for the "extract2Assign" operator
}
